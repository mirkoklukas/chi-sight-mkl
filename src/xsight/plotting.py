# AUTOGENERATED! DO NOT EDIT! File to edit: ../../notebooks/00a - Plotting.ipynb.

# %% auto 0
__all__ = ['rgba_from_vals', 'line_collection', 'plot_segs', 'zoom_in']

# %% ../../notebooks/00a - Plotting.ipynb 1
import matplotlib.pyplot as plt
import numpy as np

# %% ../../notebooks/00a - Plotting.ipynb 2
def rgba_from_vals(vs, q=0.0, cmap="viridis", vmin=None, vmax=None):
    if isinstance(q,list):
        v_min = np.quantile(vs, q[0])
        v_max = np.quantile(vs, q[1])
    else:
        v_min = np.quantile(vs, q)
        v_max = np.max(vs)

    if vmax is not None: v_max = vmax
    if vmin is not None: v_min = vmin

    cm  = getattr(plt.cm, cmap)
    vs_ = np.clip(vs, v_min, v_max)
    cs  = cm(plt.Normalize()(vs_))
    return cs

# %% ../../notebooks/00a - Plotting.ipynb 4
from matplotlib.collections import LineCollection


def line_collection(a, b, c=None, linewidth=1, **kwargs):
    lines = np.column_stack((a, b)).reshape(-1, 2, 2)
    lc = LineCollection(lines, colors=c, linewidths=linewidth, **kwargs)
    return lc



# %% ../../notebooks/00a - Plotting.ipynb 6
def plot_segs(ax, segs, c="k", linewidth=1, **kwargs):
    n = 10
    segs = segs.reshape(-1,2,2)
    a = segs[:,0]
    b = segs[:,1]
    lc = line_collection(a, b, linewidth=linewidth, **kwargs)
    lc.set_colors(c)
    ax.add_collection(lc)

# %% ../../notebooks/00a - Plotting.ipynb 8
def zoom_in(ax, x, pad):
    ax.set_xlim(np.min(x[...,0])-pad, np.max(x[...,0])+pad)
    ax.set_ylim(np.min(x[...,1])-pad, np.max(x[...,1])+pad)
